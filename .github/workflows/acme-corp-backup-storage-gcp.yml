name: Britive-GitHub Federated Access for GCP via OpenID Connect

on:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * *'  # Runs daily at 08:00 UTC

permissions:
  id-token: write
  contents: read

jobs:
  federated-gcp-access:
    runs-on: ubuntu-latest

    env:
      GCS_BUCKET_NAME: acme-corp-backup-storage
      GCP_PROJECT_ID: 810261868576
      BRITIVE_TENANT: demo.britive-app.com
      BRITIVE_PROFILE_NAME: GCP - CIS/GCP - CIS/ACME-Storage-Bucket
      FED_PROVIDER: github-britive

    steps:
      - name: Install pybritive and gcloud CLI
        run: |
          pip install pybritive --quiet

      - name: Checkout GCP access from Britive and authenticate
        run: |
          echo "Checking out GCP login command from Britive..."
          echo "Using tenant: $BRITIVE_TENANT"
          echo "Using profile: $BRITIVE_PROFILE_NAME"
          
          echo "Testing Britive connection..."
          pybritive --version
          
          echo "Attempting GCP checkout (with federation provider for OIDC)..."
          set +x
          CHECKOUT_RESULT=$(pybritive checkout -t $BRITIVE_TENANT -m gcloudauth "$BRITIVE_PROFILE_NAME" -P $FED_PROVIDER)
          echo "Checkout completed. Extracting gcloud auth command..."
          
          # Extract and execute the gcloud auth command
          GCLOUD_CMD=$(echo "$CHECKOUT_RESULT" | grep '^gcloud auth activate-service-account' | head -1)
          echo "Executing: $GCLOUD_CMD"
          eval "$GCLOUD_CMD"
          
          echo "GCP authentication completed"
          set -x

      - name: Test GCP Authentication and List Storage
        run: |
          echo "Verifying GCP authentication..."
          gcloud auth list
          echo "Current authenticated account:"
          gcloud config list account --format="value(core.account)"
          
          echo "Setting project ID: $GCP_PROJECT_ID"
          gcloud config set project $GCP_PROJECT_ID
          
          echo "Testing GCS access - listing buckets..."
          gsutil ls
          
          echo "Testing specific bucket access..."
          gsutil ls gs://$GCS_BUCKET_NAME/ || echo "Cannot access bucket $GCS_BUCKET_NAME"

      - name: Create Daily Backup File in GCS
        run: |
          BACKUP_DATE=$(date +%Y-%m-%d)
          BACKUP_FILENAME="Backup-${BACKUP_DATE}.bak"
          echo "Creating backup file: $BACKUP_FILENAME"
          echo "Daily Backup $BACKUP_DATE" > /tmp/$BACKUP_FILENAME
          gsutil cp -n /tmp/$BACKUP_FILENAME gs://$GCS_BUCKET_NAME/$BACKUP_FILENAME
          echo "Successfully created backup file: gs://$GCS_BUCKET_NAME/$BACKUP_FILENAME"
          echo "Current files in backup bucket:"
          gsutil ls gs://$GCS_BUCKET_NAME/
